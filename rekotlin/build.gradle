apply plugin: 'kotlin'
//apply plugin: 'org.jetbrains.dokka'

version = '2.0.0-rc2'

compileKotlin {
    sourceCompatibility = JavaVersion.VERSION_1_7
    targetCompatibility = JavaVersion.VERSION_1_7
    kotlinOptions.jvmTarget = "1.6"
}

compileTestKotlin {
    sourceCompatibility = JavaVersion.VERSION_1_7
    targetCompatibility = JavaVersion.VERSION_1_7
    kotlinOptions.jvmTarget = "1.6"
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    testCompile "org.junit.jupiter:junit-jupiter-api:$junit_jupiter_version"
    testRuntime "org.junit.jupiter:junit-jupiter-engine:$junit_jupiter_version"
    testRuntime "org.junit.platform:junit-platform-launcher:$junit_platform_launcher"
}

test {
    testLogging.showStandardStreams = true
    useJUnitPlatform()
    testLogging {
        // set options for log level LIFECYCLE
        events "failed", "passed"
        exceptionFormat "short"
    }
}


apply from: "${rootDir}/gradle/jacoco.gradle"

apply plugin: 'org.jetbrains.dokka'


dokka {
    outputFormat = 'html'
    outputDirectory = "$buildDir/dokka"
    configuration {
        reportUndocumented = true
    }
}

task dokkaJavadoc(type: org.jetbrains.dokka.gradle.DokkaTask) {
    outputFormat = 'javadoc'
    outputDirectory = javadoc.destinationDir
    inputs.dir 'src/main/kotlin'
}

apply from: "${rootDir}/gradle/publish.gradle"
